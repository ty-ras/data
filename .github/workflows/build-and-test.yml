name: Build, test, and publish code coverage

on:
  workflow_call:
    inputs:
      fetch-depth:
        required: true
        type: number
      pre-run-function:
        required: false
        type: string
        default: |
          tyras_pre_run ()
          {
            echo 'No pre-run.'
          }
      post-run-function:
        required: false
        type: string
        default: |
          tyras_post_run ()
          {
            echo 'No post-run.'
          }

jobs:
  build_and_test:
    strategy:
      matrix:
        dir: [ data ]
    runs-on: ubuntu-latest
    name: Build and test ${{ matrix.dir }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: ${{ inputs.fetch-depth }}

      - id: prepare
        name: Prepare ${{ matrix.dir }}
        shell: bash
        run: |
          set -e

          ${{ inputs.pre-run-function }}
          tyras_pre_run '${{ matrix.dir }}'

      - id: install
        name: Install dependencies of ${{ matrix.dir }}
        shell: bash
        run: |
          set -e

          ./scripts/install.sh '${{ matrix.dir }}'

      - id: test
        name: Test ${{ matrix.dir }}
        shell: bash
        run: |
          set -e

          ./scripts/test.sh '${{ matrix.dir }}' coverage

      # Run build *after* tests - since tests no longer require transpiled JS to run
      # We still want to run build to catch any TS error possibly lurking somewhere.
      # Because we test first and build then, we can at this point remove the whole __tests__ directory.
      # Remember to also remove 'type' property from package.json, as it is no longer needed at this point.
      - id: build
        name: Build ${{ matrix.dir }}
        shell: bash
        run: |
          set -e

          rm -rf '${{ matrix.dir }}/src/__test__'
          cat '${{ matrix.dir }}/package.json' | jq -M 'del(.type)'
          cat '${{ matrix.dir }}/package.json' # If we don't do this, there will be complaint about package.json containing invalid JSON.
          ./scripts/build.sh '${{ matrix.dir }}'

      - id: coverage
        name: Upload coverage for '${{ matrix.dir }}'
        uses: codecov/codecov-action@v3
        with:
          flags: ${{ matrix.dir }}
          directory: ${{ matrix.dir }}

      - id: finalize
        name: Finalize ${{ matrix.dir }}
        shell: bash
        run: |
          set -e

          ${{ inputs.post-run-function }}
          tyras_post_run '${{ matrix.dir }}'
