name: CD Pipeline

# After each successful PR merge to main branch.
on:
  pull_request: # push:
    branches:
    - main

# Tbh, the most optimal way would be if I could reuse steps instead of jobs
# I guess that is possible if I would create separate folder for the action, but right now it seems like too heavy approach.
# Worth investigating later tho.
jobs:
  cd_job:
    uses: ./.github/workflows/build-and-test.yml
    with:
      fetch-depth: 0 # We must fetch whole history to be able to search for tags in pre-run-function
      pre-run-function: |
        tyras_pre_run ()
        {
          PACKAGE_VERSION="$(cat "$1/package.json" | jq -rM .version)"
          GIT_TAG_NAME="$1-v${PACKAGE_VERSION}"
          if [[ -n "$(git ls-remote --tags origin "${GIT_TAG_NAME}")" ]]; then
            # Tag already exists, meaning release has been done, so don't do anything here anymore
            echo "Detected that tag ${GIT_TAG_NAME} already is created, not proceeding"
            exit 0
          fi
        }
      post-run-function: |
        tyras_post_run ()
        {
          echo "TODO: run npm publish, and push tag"
        }

# jobs:
#   publish:
#     strategy:
#       matrix:
#         dir: [ data ]
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - id: publish
#         name: Publish ${{ matrix.dir }}
#         shell: bash
#         run: |
#           set -e

#           exit 5 # This file is WIP

#           CURRENT_BRANCH="${GITHUB_REF#refs/heads/}"
#           if [[ "${CURRENT_BRANCH}" != "main" ]]; then
#             echo 'This action can only be run on main branch!' 1>&2
#             exit 1
#           fi

#           cd ${{ matrix.dir }}
#           PACKAGE_VERSION="$(cat package.json | jq -rM .version)"
#           GIT_TAG_NAME="${{ matrix.dir }}-v${PACKAGE_VERSION}"
#           if [[ -n "$(git ls-remote --tags origin "${GIT_TAG_NAME}")" ]]; then
#             # Tag already exists, meaning release has been done, so don't do anything here anymore
#             echo "Detected that tag ${GIT_TAG_NAME} already is created, not proceeding"
#             exit 0
#           fi

#           yarn install --frozen-lockfile
#           echo TODO check correct commands and see if prepublishOnly is good way to do publishing commands. Remember to remove test files.

          
#           yarn install --no-save @jsdevtools/npm-publish
#           ./node_modules/.bin/npm-publish --access public --token '${{ secrets.NPM_TOKEN }}'

#           # TODO we must generate release notes for the package
#           # TODO set up organization-wide CICD-GitHub account
#           git config --global user.email "cd-automation@ty-ras.project"
#           git config --global user.name "CD Automation"
#           git tag \
#             -a \
#             -m "Component ${{ matrix.dir }} release ${PACKAGE_VERSION}" \
#             "${GIT_TAG_NAME}"
#           git push origin "${GIT_TAG_NAME}"
