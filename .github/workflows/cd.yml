name: CD Pipeline

# After each successful PR merge to main branch.
on:
  pull_request: # push:
    branches:
    - main

# Tbh, the most optimal way would be if I could reuse steps instead of jobs
# I guess that is possible if I would create separate folder for the action, but right now it seems like too heavy approach.
# Worth investigating later tho.
jobs:
  cd_job:
    uses: ./.github/workflows/build-and-test.yml
    with:
      fetch-depth: 0 # We must fetch whole history to be able to search for tags in pre-run-function
      # Don't use normal NPM publish actions in order to avoid token writing to .npmrc file.
      post-run-function: |
        tyras_post_run ()
        {
          PACKAGE_VERSION="$(cat "$1/package.json" | jq -rM .version)"
          GIT_TAG_NAME="$1-v${PACKAGE_VERSION}"
          if [[ -n "$(git ls-remote --tags origin "${GIT_TAG_NAME}")" ]]; then
            echo "Detected that tag ${GIT_TAG_NAME} already is existing, not proceeding to publish package $1"
          else
            cd "$1"
            cp ../LICENSE ./LICENSE.txt
            yarn install --no-save "@jsdevtools/npm-publish@$(cat versions/npm-publish)"
            ./node_modules/.bin/npm-publish --access public --token "${NPM_PUBLISH_TOKEN}"

            git config --global user.email "cd-automation@ty-ras.project"
            git config --global user.name "CD Automation"
            git tag \
              -a \
              -m "Component $1 release ${PACKAGE_VERSION}" \
              "${GIT_TAG_NAME}"
            git push origin "${GIT_TAG_NAME}"
          fi
        }
    secrets:
      npm-publish-token: ${{ secrets.NPM_PUBLISH_TOKEN }}